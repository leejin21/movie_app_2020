{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","map","movie","console","log","key","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAkCeA,MA7Bf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OACvC,OADyD,EAAVC,OAE3C,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAQ7B,uBAAGK,UAAU,kBAAkBH,EAAQM,MAAM,EAAG,KAAO,UCiCxDC,G,kNA5CXC,MAAQ,CAEJC,WAAW,EACXC,OAAQ,I,EAEZC,U,sBAAY,8BAAAC,EAAA,sEAMEC,IAAMC,IAAI,0CANZ,gBAIQJ,EAJR,EAGJK,KACIA,KAAQL,OAGhB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAP3B,2C,kEAcRQ,KAAKN,c,+BAEC,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OAEnB,OACI,6BAASP,UAAU,aACdM,EACG,yBAAKN,UAAU,UACX,0BAAMA,UAAU,gBAAhB,gBAGJ,yBAAKA,UAAU,UAEVO,EAAOQ,KAAI,SAACC,GAET,OADAC,QAAQC,IAAIF,GACL,kBAAC,EAAD,CAAOG,IAAKH,EAAMtB,GAAIA,GAAIsB,EAAMtB,GAAIC,KAAMqB,EAAMrB,KAAMC,MAAOoB,EAAMpB,MAAOC,QAASmB,EAAMnB,QAASC,OAAQkB,EAAMI,mBAAoBrB,OAAQiB,EAAMjB,kB,GApCnKsB,IAAMC,YCHxBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.c76dd275.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// fixed: genres가 없는 경우가 있을 수 있음. 그런 경우 undefined를 map하는 거라고 에러가 뜸. 따라서 movie__genres 부분을 아예 주석처리해버림\r\n// if component does not need \"state\", then 굳이 className component일 필요가 없음. 따라서 function component로.\r\n// FIXED: props는 {}로 function의 인자로 넘김, key는 인자로 넘기는 것이 아니라고 함\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}></img>\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                {/* <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres__genre\">\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul> */}\r\n                <p className=\"movie__summary\">{summary.slice(0, 200) + \"...\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\n// FIXED: Since JSX is JavaScript, identifiers such as class and for are discouraged as XML attribute names. Instead, React DOM components expect DOM property names like className and htmlFor, respectively.\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        // 미래에 추가할 state를 모두 처음에 declare할 필요는 없음.\r\n        isLoading: true,\r\n        movies: [],\r\n    };\r\n    getMovies = async () => {\r\n        // async 알아보기\r\n        const {\r\n            data: {\r\n                data: { movies },\r\n            },\r\n        } = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\r\n        this.setState({ movies, isLoading: false });\r\n    };\r\n    componentDidMount() {\r\n        // setTimeout(() => {\r\n        //     // setTimeout의 인자1: function, 인자2: 시간(ms 기준)\r\n        //     this.setState({ isLoading: false });\r\n        // }, 3000);\r\n        this.getMovies();\r\n    }\r\n    render() {\r\n        const { isLoading, movies } = this.state;\r\n        // const { toy } = this.state;\r\n        return (\r\n            <section className=\"container\">\r\n                {isLoading ? (\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader__text\">Loading....</span>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"movies\">\r\n                        {/* <h1 className=\"document__head\">Movies list</h1> */}\r\n                        {movies.map((movie) => {\r\n                            console.log(movie);\r\n                            return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}></Movie>;\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}